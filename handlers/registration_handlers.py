from os import environ

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from handlers.client_util_handlers import help_command_message
from models import User
from states import states_set
from transaction.transactions import UserTransactions


class RegistrationHandler:
    user_transactions = UserTransactions()
    men_chat_link = environ["MEN_CHAT"]
    women_chat_link = environ["WOMEN_CHAT"]
    main_channel = environ["MAIN_CHANNEL"]
    instagram = environ["INSTAGRAM"]

    async def start_handler(self, message: types.Message):
        user_age = self.user_transactions.get_user_age(message.from_user.id)
        if message.from_user.id == message.chat.id and user_age is None or (
                type(user_age) is tuple and user_age[0] is None):
            from_user = message.from_user
            user = User(from_user.first_name, from_user.last_name, from_user.id)
            self.user_transactions.add_user(user)
            keyboard = InlineKeyboardMarkup()
            keyboard.add(InlineKeyboardButton("–î–∞!", callback_data="add_city_question"))
            await message.answer("ü•≥ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤—ã–∑–æ–≤ #–õ—è–º–ë–µ—Ä–ø–∏ üëä\n\n"
                                 "üéØ–ù–∞—à–∞ —Ü–µ–ª—å - –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å 1 000 000 –±—ë—Ä–ø–∏"
                                 " –∏ –ø—Ä–æ–±–µ–∂–∞—Ç—å üèÉ 100 000 –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –¥–æ 1 –¥–µ–∫–∞–±—Ä—è 2022 –≥–æ–¥–∞.\n\n"
                                 "–ü—Ä–∏–Ω–∏–º–∞–π –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ, –ø—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π,"
                                 " —Å—Ç–∞–Ω–æ–≤–∏—Å—å –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–µ–π —Å–µ–±—è –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–π –æ–∫—Ä—É–∂–µ–Ω–∏–µ.\n\n"
                                 "üí• –ú–æ—Ä–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª—É—á–∏—à—å –≤–Ω—É—Ç—Ä–∏ —á–∞—Ç–æ–≤,"
                                 " –≥–¥–µ —Ç–µ–±—è –∂–¥—É—Ç –ó–û–ñ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∏.\n\n"
                                 "–Ø –±—É–¥—É –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å—á–∏—Ç–∞—Ç—å —Ç–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
                                 " –∏ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–æ—â—Ä—è—Ç—å –ø—Ä–∏—è—Ç–Ω—ã–º–∏ –ø–æ–¥–∞—Ä–∫–∞–º–∏ üéÅ\n\n"
                                 "üôå –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è!\n\n"
                                 "–ì–æ—Ç–æ–≤ (–∞)?", reply_markup=keyboard)

    async def add_city_question_handler(self, callback_query: types.CallbackQuery):
        user_age = self.user_transactions.get_user_age(callback_query.from_user.id)
        if user_age is None or (type(user_age) is tuple and user_age[0] is None):
            await states_set.Registration.add_city.set()
            await callback_query.message.answer("–ù–∞–ø–∏—à–∏ –∏–∑ –∫–∞–∫–æ–π —Ç—ã —Å—Ç—Ä–∞–Ω—ã –∏ –≥–æ—Ä–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –°—Ç—Ä–∞–Ω–∞/–ì–æ—Ä–æ–¥")

    async def add_city_handler(self, message: types.Message):
        self.user_transactions.add_city(message.from_user.id, message.text)
        await states_set.Registration.add_gender.set()
        keyboard = InlineKeyboardMarkup(row_width=2)
        keyboard.add(InlineKeyboardButton("–ú", callback_data="burpeeMan"),
                     InlineKeyboardButton("–ñ", callback_data="burpeeWoman"))
        await message.answer("–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª üôã‚Äç‚ôÇÔ∏èüíÉ", reply_markup=keyboard)

    async def add_gender_handler(self, callback_query: types.CallbackQuery, state: FSMContext):
        message = callback_query.message
        gender = None
        if callback_query.data.__eq__("burpeeMan"):
            gender = 1
        elif callback_query.data.__eq__("burpeeWoman"):
            gender = 2
        self.user_transactions.add_gender(message.chat.id, gender)
        await states_set.Registration.add_age.set()
        await message.answer("–£–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç")
        await state.update_data({"gender": gender})

    async def add_age_handler(self, message: types.Message, state: FSMContext):
        user_data: dict = await state.get_data()
        gender = user_data.get("gender")
        if gender == 2:
            link = self.women_chat_link
        else:
            link = self.men_chat_link
        await state.finish()
        self.user_transactions.add_age(message.from_user.id, int(message.text))
        await message.answer("ü•≥ –¢–≤–æ—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n\n"
                             f"–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª –≤—ã–∑–æ–≤–∞ {self.main_channel}\n\n"
                             "üëâ–í—Å—Ç—É–ø–∞–π –≤ —á–∞—Ç —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏, –≤–¥–æ—Ö–Ω–æ–≤–ª—è–π –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–π—Å—è –ø—Ä–∏–º–µ—Ä–æ–º.\n"
                             "–ü—Ä–∏—Å—ã–ª–∞–π —Ç—É–¥–∞ —Ä–æ–ª–∏–∫–∏ —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –±–µ—Ä–ø–∏ –∏ —Å–∫—Ä–∏–Ω—ã –ø—Ä–æ–±–µ–∂–µ–∫.\n\n"
                             "üëáüëáüëáüëáüëá\n"
                             f"{link}\n\n"
                             "üì¢ –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –æ–±—Ä–∞—â–∞–π—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É  @bulavasergey\n\n"
                             "üôå –ñ–µ–ª–∞—é —Ç–µ–±–µ –ª—ë–≥–∫–æ–π –∂–∏–∑–Ω–∏ –∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ø–æ–±–µ–¥ –Ω–∞–¥ —Å–æ–±–æ–π. \n\n"
                             "üí• –Ø –≤ —Ç–µ–±—è –≤–µ—Ä—é. \n\n"
                             "üåü –ó–∞–ø–æ–º–Ω–∏ —ç—Ç–æ—Ç –¥–µ–Ω—å –∏ –≤ –¥–æ–±—Ä—ã–π –ø—É—Ç—å.", parse_mode="HTML")
        await help_command_message(message)
